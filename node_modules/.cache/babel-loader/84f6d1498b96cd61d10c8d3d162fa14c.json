{"ast":null,"code":"var _jsxFileName = \"E:\\\\Levinswap\\\\levinswap-farm\\\\src\\\\components\\\\DisclaimerModal\\\\DisclaimerModal.tsx\";\nimport React, { useCallback, useState, useMemo } from 'react';\nimport Button from '../Button';\nimport CardIcon from '../CardIcon';\nimport Modal from '..//Modal';\nimport ModalActions from '..//ModalActions';\nimport ModalContent from '../ModalContent';\nimport ModalTitle from '../ModalTitle';\n\nconst DisclaimerModal = ({\n  onConfirm,\n  onDismiss\n}) => {\n  const [step, setStep] = useState('disclaimer');\n  const handleConfirm = useCallback(() => {\n    onConfirm();\n    onDismiss();\n  }, [onConfirm, onDismiss]);\n  const modalContent = useMemo(() => {\n    if (step === 'disclaimer') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Audits: None.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"While the initial creators of the Sushi protocol have made reasonable efforts to attempt to ensure the security of the contracts, including forking much of the codebase from existing well-audited projects and soliciting review from friends, nothing approaching the rigor of a formal audit has been conducted at this time.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"We STRONGLY urge caution to anyone who chooses to engage with these contracts.\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"Attention SUSHI Uniswap LPs\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"The only Uniswap pool that is compatible with SUSHI is SUSHI/yCRV (Curve yPool tokens)\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Providing liquidity for other Uniswap pools is dangerous\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, \"You will LOSE your share of rebases\"));\n    }\n  }, [step]);\n  const button = useMemo(() => {\n    if (step === 'disclaimer') {\n      return /*#__PURE__*/React.createElement(Button, {\n        text: \"Next\",\n        variant: \"secondary\",\n        onClick: () => setStep('uniswap'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        text: \"I understand\",\n        onClick: handleConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }\n      });\n    }\n  }, [setStep, step, handleConfirm]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `Warning`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"\\u26A0\\uFE0F\"), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, modalContent), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, button));\n};\n\nexport default DisclaimerModal;","map":{"version":3,"sources":["E:/Levinswap/levinswap-farm/src/components/DisclaimerModal/DisclaimerModal.tsx"],"names":["React","useCallback","useState","useMemo","Button","CardIcon","Modal","ModalActions","ModalContent","ModalTitle","DisclaimerModal","onConfirm","onDismiss","step","setStep","handleConfirm","modalContent","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,OAAvC,QAAsD,OAAtD;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkC,WAAlC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAMA,MAAMC,eAA0C,GAAG,CAAC;AAClDC,EAAAA,SADkD;AAElDC,EAAAA;AAFkD,CAAD,KAG7C;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,YAAD,CAAhC;AAEA,QAAMa,aAAa,GAAGd,WAAW,CAAC,MAAM;AACtCU,IAAAA,SAAS;AACTC,IAAAA,SAAS;AACV,GAHgC,EAG9B,CAACD,SAAD,EAAYC,SAAZ,CAH8B,CAAjC;AAKA,QAAMI,YAAY,GAAGb,OAAO,CAAC,MAAM;AACjC,QAAIU,IAAI,KAAK,YAAb,EAA2B;AACzB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6UAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAVF,CADF;AAiBD,KAlBD,MAkBO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAPF,CADF;AAWD;AACF,GAhC2B,EAgCzB,CAACA,IAAD,CAhCyB,CAA5B;AAkCA,QAAMI,MAAM,GAAGd,OAAO,CAAC,MAAM;AAC3B,QAAIU,IAAI,KAAK,YAAb,EAA2B;AACzB,0BACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,SAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARD,MAQO;AACL,0BAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAEC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAZqB,EAYnB,CAACD,OAAD,EAAUD,IAAV,EAAgBE,aAAhB,CAZmB,CAAtB;AAcA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeC,YAAf,CAHF,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeC,MAAf,CAJF,CADF;AAQD,CAnED;;AAqEA,eAAeP,eAAf","sourcesContent":["import React, { useCallback, useState, useMemo } from 'react'\r\n\r\nimport Button from '../Button'\r\nimport CardIcon from '../CardIcon'\r\nimport Modal, { ModalProps } from '..//Modal'\r\nimport ModalActions from '..//ModalActions'\r\nimport ModalContent from '../ModalContent'\r\nimport ModalTitle from '../ModalTitle'\r\n\r\ninterface DisclaimerModal extends ModalProps {\r\n  onConfirm: () => void\r\n}\r\n\r\nconst DisclaimerModal: React.FC<DisclaimerModal> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n}) => {\r\n  const [step, setStep] = useState('disclaimer')\r\n\r\n  const handleConfirm = useCallback(() => {\r\n    onConfirm()\r\n    onDismiss()\r\n  }, [onConfirm, onDismiss])\r\n\r\n  const modalContent = useMemo(() => {\r\n    if (step === 'disclaimer') {\r\n      return (\r\n        <div>\r\n          <p>Audits: None.</p>\r\n          <p>\r\n            While the initial creators of the Sushi protocol have made\r\n            reasonable efforts to attempt to ensure the security of the\r\n            contracts, including forking much of the codebase from existing\r\n            well-audited projects and soliciting review from friends, nothing\r\n            approaching the rigor of a formal audit has been conducted at this\r\n            time.\r\n          </p>\r\n          <p>\r\n            We STRONGLY urge caution to anyone who chooses to engage with these\r\n            contracts.\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <p>Attention SUSHI Uniswap LPs</p>\r\n          <p>\r\n            The only Uniswap pool that is compatible with SUSHI is SUSHI/yCRV\r\n            (Curve yPool tokens)\r\n          </p>\r\n          <p>Providing liquidity for other Uniswap pools is dangerous</p>\r\n          <p>You will LOSE your share of rebases</p>\r\n        </div>\r\n      )\r\n    }\r\n  }, [step])\r\n\r\n  const button = useMemo(() => {\r\n    if (step === 'disclaimer') {\r\n      return (\r\n        <Button\r\n          text=\"Next\"\r\n          variant=\"secondary\"\r\n          onClick={() => setStep('uniswap')}\r\n        />\r\n      )\r\n    } else {\r\n      return <Button text=\"I understand\" onClick={handleConfirm} />\r\n    }\r\n  }, [setStep, step, handleConfirm])\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Warning`} />\r\n      <CardIcon>⚠️</CardIcon>\r\n      <ModalContent>{modalContent}</ModalContent>\r\n      <ModalActions>{button}</ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DisclaimerModal\r\n"]},"metadata":{},"sourceType":"module"}