{"ast":null,"code":"var _jsxFileName = \"E:\\\\Levinswap\\\\levinswap-farm\\\\src\\\\contexts\\\\SushiProvider\\\\SushiProvider.tsx\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { Sushi } from '../../sushi';\nexport const Context = createContext({\n  sushi: undefined\n});\n\nconst SushiProvider = ({\n  children\n}) => {\n  const {\n    ethereum\n  } = useWallet();\n  const [sushi, setSushi] = useState(); // @ts-ignore\n\n  window.sushi = sushi; // @ts-ignore\n\n  window.eth = ethereum;\n  useEffect(() => {\n    if (ethereum) {\n      const chainId = Number(ethereum.chainId);\n      const sushiLib = new Sushi(ethereum, chainId, false, {\n        defaultAccount: ethereum.selectedAddress,\n        defaultConfirmations: 1,\n        autoGasMultiplier: 1.5,\n        testing: false,\n        defaultGas: '6000000',\n        defaultGasPrice: '1000000000000',\n        accounts: [],\n        ethereumNodeTimeout: 10000\n      });\n      setSushi(sushiLib);\n      window.sushisauce = sushiLib;\n    }\n  }, [ethereum]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      sushi\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default SushiProvider;","map":{"version":3,"sources":["E:/Levinswap/levinswap-farm/src/contexts/SushiProvider/SushiProvider.tsx"],"names":["React","createContext","useEffect","useState","useWallet","Sushi","Context","sushi","undefined","SushiProvider","children","ethereum","setSushi","window","eth","chainId","Number","sushiLib","defaultAccount","selectedAddress","defaultConfirmations","autoGasMultiplier","testing","defaultGas","defaultGasPrice","accounts","ethereumNodeTimeout","sushisauce"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAMA,OAAO,MAAMC,OAAO,GAAGL,aAAa,CAAe;AACjDM,EAAAA,KAAK,EAAEC;AAD0C,CAAf,CAA7B;;AAUP,MAAMC,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAkCP,SAAS,EAAjD;AACA,QAAM,CAACG,KAAD,EAAQK,QAAR,IAAoBT,QAAQ,EAAlC,CAFgD,CAIhD;;AACAU,EAAAA,MAAM,CAACN,KAAP,GAAeA,KAAf,CALgD,CAMhD;;AACAM,EAAAA,MAAM,CAACC,GAAP,GAAaH,QAAb;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAJ,EAAc;AACZ,YAAMI,OAAO,GAAGC,MAAM,CAACL,QAAQ,CAACI,OAAV,CAAtB;AACA,YAAME,QAAQ,GAAG,IAAIZ,KAAJ,CAAUM,QAAV,EAAoBI,OAApB,EAA6B,KAA7B,EAAoC;AACnDG,QAAAA,cAAc,EAAEP,QAAQ,CAACQ,eAD0B;AAEnDC,QAAAA,oBAAoB,EAAE,CAF6B;AAGnDC,QAAAA,iBAAiB,EAAE,GAHgC;AAInDC,QAAAA,OAAO,EAAE,KAJ0C;AAKnDC,QAAAA,UAAU,EAAE,SALuC;AAMnDC,QAAAA,eAAe,EAAE,eANkC;AAOnDC,QAAAA,QAAQ,EAAE,EAPyC;AAQnDC,QAAAA,mBAAmB,EAAE;AAR8B,OAApC,CAAjB;AAUAd,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACAJ,MAAAA,MAAM,CAACc,UAAP,GAAoBV,QAApB;AACD;AACF,GAhBQ,EAgBN,CAACN,QAAD,CAhBM,CAAT;AAkBA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEJ,MAAAA;AAAF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCG,QAArC,CAAP;AACD,CA5BD;;AA8BA,eAAeD,aAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\n\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { Sushi } from '../../sushi'\r\n\r\nexport interface SushiContext {\r\n  sushi?: typeof Sushi\r\n}\r\n\r\nexport const Context = createContext<SushiContext>({\r\n  sushi: undefined,\r\n})\r\n\r\ndeclare global {\r\n  interface Window {\r\n    sushisauce: any\r\n  }\r\n}\r\n\r\nconst SushiProvider: React.FC = ({ children }) => {\r\n  const { ethereum }: { ethereum: any } = useWallet()\r\n  const [sushi, setSushi] = useState<any>()\r\n\r\n  // @ts-ignore\r\n  window.sushi = sushi\r\n  // @ts-ignore\r\n  window.eth = ethereum\r\n\r\n  useEffect(() => {\r\n    if (ethereum) {\r\n      const chainId = Number(ethereum.chainId)\r\n      const sushiLib = new Sushi(ethereum, chainId, false, {\r\n        defaultAccount: ethereum.selectedAddress,\r\n        defaultConfirmations: 1,\r\n        autoGasMultiplier: 1.5,\r\n        testing: false,\r\n        defaultGas: '6000000',\r\n        defaultGasPrice: '1000000000000',\r\n        accounts: [],\r\n        ethereumNodeTimeout: 10000,\r\n      })\r\n      setSushi(sushiLib)\r\n      window.sushisauce = sushiLib\r\n    }\r\n  }, [ethereum])\r\n\r\n  return <Context.Provider value={{ sushi }}>{children}</Context.Provider>\r\n}\r\n\r\nexport default SushiProvider\r\n"]},"metadata":{},"sourceType":"module"}